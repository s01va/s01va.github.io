{"componentChunkName":"component---node-modules-gatsby-theme-portfolio-minimal-src-templates-article-index-tsx","path":"/in-CentOS7-WebLogic12c-Install/","result":{"pageContext":{"article":{"banner":{"alt":null,"caption":null,"src":null},"body":"<p>선수 요구사항:\r\nOracle 계정\r\nJava HotSpot(TM) 1.8.0_241\r\n앞으로 CentOS7에서 모든 WAS 테스트는 /was 경로에서 진행할 것이다.</p>\n<p>폐쇄망이라고 가정한다.</p>\n<h1>선수 요구사항을 위한 세팅</h1>\n<p>java를 설치한다.</p>\n<p><a href=\"https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\">여기</a>에서 리눅스용 자바를 다운받고 해당 CentOS로 옮겼다.</p>\n<p><img src=\"./images/0.PNG\" alt=\"oracle java download\"></p>\n<p><img src=\"./images/1.PNG\" alt=\"oracle java download\"></p>\n<p>내려받은 rpm 파일로 java를 설치한다.</p>\n<p><img src=\"./images/2.PNG\" alt=\"rpm\"></p>\n<p>root로 진행해야 한다.\r\n참고로 위에서 사용한 rpm 명령어의 옵션값은 아래와 같은 의미를 가진다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Option</th>\n<th align=\"center\">의미</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">-i</td>\n<td align=\"center\">Install(설치)</td>\n</tr>\n<tr>\n<td align=\"center\">-v</td>\n<td align=\"center\">Verbose(상세)</td>\n</tr>\n<tr>\n<td align=\"center\">-h</td>\n<td align=\"center\">Header(헤더를 표시)</td>\n</tr>\n<tr>\n<td align=\"center\">--prefix</td>\n<td align=\"center\">설치경로</td>\n</tr>\n</tbody>\n</table>\n<p>설치경로는 따로 설정하지 않아도 좋지만 따로 설정하지 않으면 /usr/경로 아래에 패키지가 설치될 것이다.\r\n위에서 prefix옵션 뒤의 경로는 미리 생성해둔 경로이다.</p>\n<p>설치 후 환경변수에 JAVA_HOME을 추가해 주어야 한다. 홈 경로의 .bash_profile을 아래와 같이 수정해 준다.\r\n(.bashrc에서 설정한 것들은 재접속하면 날아간다.)</p>\n<p><img src=\"./images/3.PNG\" alt=\".bash_profile\"></p>\n<p>그리고 아래와 같은 명령어로 수정된 .bash_profile 파일을 적용해 준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">.</span> .bash_profile</code></pre></div>\n<p><a href=\"https://s01va.github.io/CentOS7%EC%97%90%EC%84%9C-X11-forwarding-%EC%84%A4%EC%A0%95/\">CentOS7에서 X11 forwarding 설정(X Window 설치)</a>를 해두면 이후 과정은 <a href=\"https://s01va.github.io/Windows-10%EC%97%90%EC%84%9C-WebLogic-12c-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/\">이 페이지</a>를 그대로 따라해도 좋다.</p>\n<p>하지만 폐쇄망 환경이라면 의존성 문제 등으로 Xwindow는 설치하기 까다로울 수 있다.\r\n콘솔 모드로 설치하는 것을 생각할 수 있는데, 12c 버전부터는 콘솔 모드를 지원하지 않는다.\r\n(<code class=\"language-text\">-mode=console</code>로 설치를 시도하면, 부적합한 인수라고 함..)</p>\n<p>대신 사일런트 모드를 사용할 수 있으므로, 사일런트 모드 설치과정을 기재하였다.</p>\n<h1>설치파일 다운로드</h1>\n<p><a href=\"https://www.oracle.com/middleware/technologies/fusionmiddleware-downloads.html\">Oracle</a>에서 Generic Installer 다운로드</p>\n<p><img src=\"./images/4.PNG\" alt=\"Oracle Weblogic\"></p>\n<p><img src=\"./images/5.PNG\" alt=\"Oracle Weblogic\"></p>\n<p>다음과 같은 압축파일이 다운받아진다</p>\n<p><img src=\"./images/6.PNG\" alt=\"Oracle Weblogic zipfile\"></p>\n<p>다운로드 받은 파일을 CentOS로 옮겨준다.</p>\n<p><img src=\"./images/7.PNG\" alt=\"zip file in CentOS\"></p>\n<h1>WebLogic 설치</h1>\n<p>압축을 풀어준다.</p>\n<p><img src=\"./images/8.PNG\" alt=\"unzip\"></p>\n<p>사일런트 모드가 아니라면 바로 설치를 진행할 수 있지만\r\n사일런트 모드로 설치하기 위해서는 사전에 생성해야 할 파일이 두 개가 있다.\r\n(사일런트 모드 설치 명령어는 다음과 같이 이루어진다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">java</span> <span class=\"token parameter variable\">-jar</span> fmw_12.2.1.4.0_wls.jar <span class=\"token parameter variable\">-silent</span> <span class=\"token parameter variable\">-responseFile</span> <span class=\"token punctuation\">[</span>response 포인터 파일 절대경로<span class=\"token punctuation\">]</span> <span class=\"token parameter variable\">-invPtrLoc</span> <span class=\"token punctuation\">[</span>인벤토리 포인터 파일 절대경로<span class=\"token punctuation\">]</span></code></pre></div>\n<h2>Response file 생성</h2>\n<p><code class=\"language-text\">-responseFile</code> 옵션에 들어갈 파일을 생성해 주어야 한다.</p>\n<p>여기서 중요한 것은 ORACLE_HOME, INSTALL_TYPE, SECURITY_UPDATES_VIA_MYORACLESUPPORT 세가지 정도.\r\n각자의 환경에 맞게 써준다.</p>\n<p>출처: <a href=\"https://docs.oracle.com/middleware/1212/core/OUIRF/response_file.htm#OUIRF392\">오라클</a></p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token punctuation\">[</span>ENGINE<span class=\"token punctuation\">]</span>\r\n \r\n<span class=\"token comment\">#DO NOT CHANGE THIS.</span>\r\nResponse File <span class=\"token assign-left variable\">Version</span><span class=\"token operator\">=</span><span class=\"token number\">1.0</span>.0.0.0\r\n \r\n<span class=\"token punctuation\">[</span>GENERIC<span class=\"token punctuation\">]</span>\r\n \r\n<span class=\"token comment\">#The oracle home location. This can be an existing Oracle Home or a new Oracle Home</span>\r\n<span class=\"token assign-left variable\">ORACLE_HOME</span><span class=\"token operator\">=</span>/was/weblogic12c\r\n \r\n<span class=\"token comment\">#Set this variable value to the Installation Type selected. e.g. Fusion Middleware Infrastructure, Fusion Middleware Infrastructure With Examples.</span>\r\n<span class=\"token assign-left variable\">INSTALL_TYPE</span><span class=\"token operator\">=</span>WebLogic Server\r\n \r\n<span class=\"token comment\">#Provide the My Oracle Support Username. If you wish to ignore Oracle Configuration Manager configuration provide empty string for user name.</span>\r\n<span class=\"token assign-left variable\">MYORACLESUPPORT_USERNAME</span><span class=\"token operator\">=</span>\r\n \r\n<span class=\"token comment\">#Provide the My Oracle Support Password</span>\r\n<span class=\"token assign-left variable\">MYORACLESUPPORT_PASSWORD</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>SECURE VALUE<span class=\"token operator\">></span>\r\n \r\n<span class=\"token comment\">#Set this to true if you wish to decline the security updates. Setting this to true and providing empty string for My Oracle Support username will ignore the Oracle Configuration Manager configuration</span>\r\n<span class=\"token assign-left variable\">DECLINE_SECURITY_UPDATES</span><span class=\"token operator\">=</span>true\r\n \r\n<span class=\"token comment\">#Set this to true if My Oracle Support Password is specified</span>\r\n<span class=\"token assign-left variable\">SECURITY_UPDATES_VIA_MYORACLESUPPORT</span><span class=\"token operator\">=</span>false\r\n \r\n<span class=\"token comment\">#Provide the Proxy Host</span>\r\n<span class=\"token assign-left variable\">PROXY_HOST</span><span class=\"token operator\">=</span>\r\n \r\n<span class=\"token comment\">#Provide the Proxy Port</span>\r\n<span class=\"token assign-left variable\">PROXY_PORT</span><span class=\"token operator\">=</span>\r\n \r\n<span class=\"token comment\">#Provide the Proxy Username</span>\r\n<span class=\"token assign-left variable\">PROXY_USER</span><span class=\"token operator\">=</span>\r\n \r\n<span class=\"token comment\">#Provide the Proxy Password</span>\r\n<span class=\"token assign-left variable\">PROXY_PWD</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>SECURE VALUE<span class=\"token operator\">></span>\r\n \r\n<span class=\"token comment\">#Type String (URL format) Indicates the OCM Repeater URL which should be of the format [scheme[Http/Https]]://[repeater host]:[repeater port]</span>\r\n<span class=\"token assign-left variable\">COLLECTOR_SUPPORTHUB_URL</span><span class=\"token operator\">=</span></code></pre></div>\n<p>ORACLE_HOME에 해당되는 디렉토리는 따로 직접 생성해 준다.</p>\n<p>.rsp 형태로 파일명을 지정해준다.</p>\n<p><img src=\"./images/9.PNG\" alt=\"naming rsp file\"></p>\n<p><img src=\"./images/10.PNG\" alt=\"making rsp file\"></p>\n<p><img src=\"./images/11.PNG\" alt=\"making oracle_home\"></p>\n<h2>인벤토리 포인터 파일 생성</h2>\n<p><code class=\"language-text\">-invPtrLoc</code> 옵션에 들어갈 파일도 필요하다.\r\n이 파일의 이름은 oraInst.loc이어야 한다.\r\n이를 아래와 같이 작성해 준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token assign-left variable\">inventory_loc</span><span class=\"token operator\">=</span>/was/oraInventory\r\n<span class=\"token assign-left variable\">inst_group</span><span class=\"token operator\">=</span>weblogic</code></pre></div>\n<p>oraInventory는 오라클 제품군 설치 시 필요한 파일들이 들어 있는 디렉토리이다.\r\n설치 시 디렉토리 째로 생성된다. 위의 inventory_loc 뒤에 이 oraInventory가 생성될 경로를 입력해 준다.</p>\n<p><img src=\"./images/12.PNG\" alt=\"naming loc file\"></p>\n<p><img src=\"./images/13.PNG\" alt=\"making loc file\"></p>\n<p>이제 설치해 준다.</p>\n<p><img src=\"./images/14.PNG\" alt=\"Install silent mode\"></p>\n<p>위에서 지정해준 ORACLE_HOME 위치에 파일들이 생성된 것을 볼 수 있다.</p>\n<p><img src=\"./images/15.PNG\" alt=\"ORACLE_HOME\"></p>\n<hr>\n<h1>도메인 구성 &#x26; Admin server 생성</h1>\n<p><code class=\"language-text\">$ORACLE_HOME/wlserver/common/bin</code>으로 진입한다.</p>\n<p><img src=\"./images/16.PNG\" alt=\"common\"></p>\n<p>wlst.sh를 발견할 수 있다.</p>\n<p>wlst는 WebLogic Scripting Tool이라고 한다.</p>\n<p>이 쉘파일을 실행시킨다.</p>\n<p><img src=\"./images/17.PNG\" alt=\"wlst.sh\"></p>\n<p>deprecated script라며 oracle_common/common/bin에 있는 wlst.sh를 실행하라고 하지만 현재의 스크립트로 설치를 진행한다.</p>\n<p><img src=\"./images/18.PNG\" alt=\"read template\"></p>\n<p>위의 명령어를 실행시킨다.\r\n(oracle_common/common/bin에 있는 wlst.sh로 이를 진행하면 템플릿을 찾지 못해 설치가 진행되지 않는다)</p>\n<p>명령어 라인에 base_domain이 생긴 것을 볼 수 있다.\r\n이렇게 기본 생성된 도메인 이름은 나중에 변경할 수 있다.</p>\n<p>이제 서버 기동 및 콘솔 접근에 필요한 관리자 계정을 생성해 준다.</p>\n<p><img src=\"./images/19.PNG\" alt=\"make admin\"></p>\n<p>이 weblogic을 운영모드로 운용하려면 다음과 같이 설정해 준다.</p>\n<p><img src=\"./images/20.PNG\" alt=\"set Production mode\"></p>\n<p>Admin server의 이름, 포트를 바꾸려면 아래와 같이 입력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd('Servers/AdminServer')\r\nset('Name', '[new name]')\r\nset('ListenPort', 7001)\r\nset('ListenAddress', 'All Local Addresses')</code></pre></div>\n<p>ListenAddress를 위의 설정대로 해주지 않으면 가능한 모든 IP를 사용하게 된다.</p>\n<p>이제 기본 적용된 도메인 이름 base_domain을 다른 이름으로 바꿔줄 것이다.</p>\n<p><img src=\"./images/21.PNG\" alt=\"rename domain\"></p>\n<p>설정을 마쳤으면 <code class=\"language-text\">closeTemplate()</code>, <code class=\"language-text\">exit()</code>으로 종료해준다.</p>\n<p>위에서 사용했던 wlst 내의 모든 명령어들을 모아 파이썬 스크립트 파일로 생성해서 한번에 설정할 수도 있다.\r\n생성한 스크립트 파일이 /tmp/setwl.py라면,</p>\n<p><code class=\"language-text\">wlst.sh /tmp/setwl.py</code> 이런식으로 실행시키면 된다.</p>\n<p>편의를 위해 .bash_profile에서 환경변수를 추가한다.</p>\n<p><img src=\"./images/22.PNG\" alt=\"DOMAIN_HOME\"></p>\n<p><code class=\"language-text\">. .bash_profile</code>로 적용해 준다.</p>\n<hr>\n<h1>Web Console을 이용하기 위한 설정</h1>\n<p>현재 설정중인 서버 내부에서 web console 컨트롤 전용 7001번 포트는 이미 열려있는 상태이다.\r\n하지만 해당 서버를 원격 터미널을 통해 컨트롤하고 있는 상황이라면 서버 내부 포트 7001과 외부 포트를 연결시켜 주어야 7001 웹 콘솔을 볼 수 있다.</p>\n<p>(방화벽에서 포트 오픈)[<a href=\"https://s01va.github.io/iptables-port-forwarding/\">https://s01va.github.io/iptables-port-forwarding/</a>]</p>\n<p>root로 계정을 바꾼 후 설정하였다.</p>\n<p><img src=\"./images/23.PNG\" alt=\"iptables\"></p>\n<p><img src=\"./images/20.PNG\" alt=\"\">\r\n<img src=\"./images/20.PNG\" alt=\"\">\r\n<img src=\"./images/20.PNG\" alt=\"\">\r\n<img src=\"./images/20.PNG\" alt=\"\">\r\n<img src=\"./images/20.PNG\" alt=\"\">\r\n<img src=\"./images/20.PNG\" alt=\"\">\r\n<img src=\"./images/30.PNG\" alt=\"\"></p>","categories":["misc","setting"],"date":"March 09, 2020","description":"WebLogic 12.2.1.4.0","id":"a372debe-577f-548c-9151-bd1f9d4edd88","keywords":["was","middleware","weblogic","centos"],"slug":"/in-CentOS7-WebLogic12c-Install/","title":"CentOS7에서 WebLogic 12c 설치하기","readingTime":{"text":"9 min read"}},"listingPagePath":"/blog"}},"staticQueryHashes":["1094019748","460736852"],"slicesMap":{}}